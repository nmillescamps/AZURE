{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
 
  "parameters": {
	"location" : {
		"type": "String",
		"defaultValue": "East US",
		"allowedValues": [
			"Central US",
			"South Central US",
			"East US",
			"West US",
			"North Central US",
			"East US 2",
			"North Europe",
			"West Europe",
			"Southeast Asia",
			"East Asia",
			"Japan West",
			"Japan East",
			"Brazil South"
		],
		"metadata": {
			"Description": "Datacenter Location"
		}
	},
	"artifactsBaseUrl": {
        "type": "string",
        "defaultValue": "https://raw.githubusercontent.com/nmillescamps/AZURE/master",
        "metadata": {
            "description": "Base URL of the solution template gallery package",
            "artifactsBaseUrl": ""
            }
    },
	"publisher": {
		"type": "String",
		"defaultValue": "SUSE",
		"allowedValues": [
		"SUSE",
		"axway"
		],
		"metadata": {
			"Description": "Publisher"
		}
	},
	"offer": {
		"type": "String",
		"defaultValue": "SLES",
		"allowedValues": [
		"SLES",
		"axway-mailgate-secure-collaboration-standard-preview"
		],
		"metadata": {
			"Description": "Choice Offer"
		}
	},
	"sku": {
		"type": "String",
		"defaultValue": "11-SP4",
		"allowedValues": [
		"11-SP4",
		"ms-saaxax-mg-st-4"
		],
		"metadata": {
			"Description": "Choice sku"
		}
	},
	"name": {
		"type": "String",
		"defaultValue": "testbrucejdc",
			"metadata": {
			"Description": "Name use for ressources, no _ are accepted"
		}
	},
	"vmSize" : {
		"type": "String",
		"defaultValue": "Standard_D2",
		"allowedValues": [
		"Standard_D2",
		"Standard_DS4",
		"Standard_DS13"
		],
		"metadata": {
			"Description": "VM Size"
		}
	},
	"vnetNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
            "new",
            "existing"
        ],
        "metadata": {
            "description": "Parameter that specifies if an new or an existing virtual network should be used for deploying the virtual machine"
        }
    },
	"virtualNetworkExistingRGName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
            "description": "Virtual Network Resource Group for cases when the VM is deployed into an existing VNet"
        }
    },
	"vnet_name": {
        "type": "string",
        "defaultValue": "vnet-mailgate",
        "metadata": {
            "description": "Virtual Network name"
        }
    },
	"vnet_AddressSpace": {
		"type": "String",
		"defaultValue": "172.16.0.0/16",
		"metadata": {
			"Description": "Virtual Network Address Space (i.e CIDR)"
		}
	},
	"subnet1Name": {
        "type": "string",
        "defaultValue": "subnet1",
        "metadata": {
            "description": "Virtual machines will be deployed into this subnet within the Virtual Network"
        }
    },
	"subnet_1_AddressSpace": {
		"type": "String",
		"defaultValue": "172.16.1.0/24",
		"metadata": {
			"Description": "Subnet1 Address Space"
		}
	},
	"private_Static_Address_subnet_default": {
		"type": "String",
		"defaultValue": "172.16.1.10",
		"metadata": {
			"Description": "IP Static in subnet1"
		}
	},
	"subnetAdminName": {
        "type": "string",
        "defaultValue": "subnetadmin",
        "metadata": {
            "description": "Virtual machines will be deployed into this subnet within the Virtual Network"
        }
    },
	"subnet_admin_AddressSpace": {
		"type": "String",
		"defaultValue": "172.16.2.0/24",
		"metadata": {
			"Description": "Subnet Admin Address Space"
		}
	},
	"private_Static_Address_subnet_admin": {
		"type": "String",
		"defaultValue": "172.16.2.10",
		"metadata": {
			"Description": "IP Static in subnet admin"
		}
	},
	"networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "NSG-subnet1",
      "metadata": {
        "description": "Name for the NSG used to allow remote access subnet1."
      }
	},
	"networkSecurityGroupName_admin": {
      "type": "string",
      "defaultValue": "NSG-subnetadmin",
      "metadata": {
        "description": "Name for the NSG used to allow remote access subnet admin."
      }
	},
	"publicip_DNS": {
		"type": "String",
		"defaultValue": "testbrucejdc",
		"metadata": {
			"Description": "VM public IP DNS"
		}
	},
	"vm_name": {
		"type": "String",
		"defaultValue": "SRV",
		"metadata": {
			"Description": "VM Name"
		}
	},
	"vm_admin": {
		"type": "String",
		"defaultValue": "azureuser",
		"metadata": {
			"Description": "VM admin username"
		}
	},
	"vm_pwd": {
		"type": "SecureString",
		"defaultValue": "Axway!123_",
		"metadata": {
			"Description": "VM admin password"
		}
	},
	"sshPublicKey": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
             "Description": "The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
            }
        },
	"authenticationType": {
		"type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication type for the virtual machine"
            }
	},
	"company": {
            "type": "string",
            "defaultValue": "Axway",
            "metadata": {
                "description": "Company name"
            }
        },
	"firstName": {
            "type": "string",
            "defaultValue": "Nathan",
            "metadata": {
                "description": "First name"
            }
        },
    "lastName": {
            "type": "string",
            "defaultValue": "Millesscamps",
            "metadata": {
                "description": "Last name"
            }
        },
    "email": {
            "type": "string",
            "defaultValue": "nmillescamps@axway.com",
            "metadata": {
                "description": "Email address"
            }
        },
    "businessPhone": {
            "type": "string",
            "defaultValue": "0667074437",
            "metadata": {
                "description": "Business phone"
            }
        },
    "jobRole": {
            "type": "string",
            "defaultValue": "Dev",
            "metadata": {
                "description": "Job role"
            }
        },
    "jobFunction": {
            "type": "string",
            "defaultValue": "Chef",
            "metadata": {
                "description": "Job function"
            }
        }
  },
    
  "variables": {	
	"author" : "support@axway.com",
	"templateAPIVersion": "2015-01-01",
	"storage_name" : "[toLower(concat(parameters('name'),'storage'))]",
	"storage_type": "Standard_LRS",
	"storage_uri" : "[concat('https://',variables('storage_name'),'.blob.core.windows.net')]",
	
	"baseUrl": "[concat(parameters('artifactsBaseUrl'),'/')]",
	"templateUrlVnet": "[concat(variables('baseUrl'),'vnet-',parameters('vnetNewOrExisting'),'.json')]",
	
	
	"networkSettings": {
	"vnet_name": "[parameters('vnet_name')]",
	"virtualNetworkExistingRGName": "[parameters('virtualNetworkExistingRGName')]",
	"vnet_AddressSpace": "[parameters('vnet_AddressSpace')]",
	"subnet": {
		"sub1":{
			"name": "[parameters('subnet1Name')]",
			"prefix": "[parameters('subnet_1_AddressSpace')]",
			"vnet": "[parameters('vnet_name')]"
		},
		"subadmin":{
			"name": "[parameters('subnetAdminName')]",
            "prefix": "[parameters('subnet_admin_AddressSpace')]",
            "vnet": "[parameters('vnet_name')]"
		}
	}
	},
		
	"publicIP_Name": "[concat(parameters('name'),'publicip')]",
	"publicIP_Type": "Static",
	
	"sshKeyPath": "[concat('/home/',parameters('vm_admin'),'/.ssh/authorized_keys')]",
	"linuxConfiguration_sshPublicKey": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[parameters('sshPublicKey')]"
                    }
                ]
            }
        },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
	
	"eth_name": "eth0",
	"eth_name2": "eth1"
	},
  
  "resources": [
 	{
		"type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('storage_name')]",
		"apiVersion": "2015-06-15",
		"location": "[parameters('location')]",
		"properties": {
			"accountType": "[variables('storage_type')]"
		}
	},
	
	{
      "name": "virtual-network",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('templateAPIVersion')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('templateUrlVnet')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },
	
	
	{
		"apiVersion": "2015-06-15",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('publicIP_Name')]",
		"location": "[parameters('location')]",
		"dependsOn" : [
			"[concat('Microsoft.Resources/deployments/', 'virtual-network')]"
		],
		"properties": {
			"publicIPAllocationMethod": "[variables('publicIP_Type')]",
			"dnsSettings": {
				"domainNameLabel": "[parameters('publicip_DNS')]"
			}
		}
	},
	{
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
	  "dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
				"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP_Name'))]"
            ],
      "properties": {
        "securityRules": [
          {
            "name": "HTTPS_Inbound",
            "properties": {
              "description": "HTTPS rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
		  },
		{
            "name": "HTTP_Inbound",
            "properties": {
              "description": "HTTP rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
		},
		{
            "name": "SMTP_Inbound",
            "properties": {
              "description": "SMTP rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "25",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
		 {
            "name": "REST_Inbound",
            "properties": {
              "description": "REST rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1030,
              "direction": "Inbound"
            }
          },
		  {
            "name": "SMTP_Outbound",
            "properties": {
              "description": "SMTP rule",
              "protocol": "Tcp",
              "sourcePortRange": "25",
              "destinationPortRange": "25",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2000,
              "direction": "Outbound"
            }
          },
		  {
            "name": "DNS_Outbound",
            "properties": {
              "description": "DNS rule",
              "protocol": "*",
              "sourcePortRange": "53",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2010,
              "direction": "Outbound"
            }
          },
		  {
            "name": "HTTP_Outbound",
            "properties": {
              "description": "HTTP rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2020,
              "direction": "Outbound"
            }
          },
		  {
            "name": "SSH_Outbound",
            "properties": {
              "description": "SSH-Remote Axway Support rule",
              "protocol": "Tcp",
              "sourcePortRange": "22",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2030,
              "direction": "Outbound"
            }
          },
		  {
            "name": "LDAP_Outbound",
            "properties": {
              "description": "LDAP rule",
              "protocol": "Tcp",
              "sourcePortRange": "389",
              "destinationPortRange": "389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2040,
              "direction": "Outbound"
            }
          },
		  {
            "name": "LDAPS_Outbound",
            "properties": {
              "description": "LDAPS rule",
              "protocol": "Tcp",
              "sourcePortRange": "636",
              "destinationPortRange": "636",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2050,
              "direction": "Outbound"
            }
          },
		  {
            "name": "AD_Outbound",
            "properties": {
              "description": "AD rule",
              "protocol": "Tcp",
              "sourcePortRange": "3268",
              "destinationPortRange": "3268",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2060,
              "direction": "Outbound"
            }
          },
		  {
            "name": "Secure_AD_Outbound",
            "properties": {
              "description": "Secure AD rule",
              "protocol": "Tcp",
              "sourcePortRange": "3269",
              "destinationPortRange": "3269",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2070,
              "direction": "Outbound"
            }
          },
		  {
            "name": "SharePoint_Outbound",
            "properties": {
              "description": "SharePoint AD rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 2080,
              "direction": "Outbound"
            }
          },
		  {
            "name": "REST_Outbound",
            "properties": {
              "description": "REST rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 2090,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
	{
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('networkSecurityGroupName_admin')]",
      "location": "[parameters('location')]",
	  "dependsOn": [
				"[concat('Microsoft.Resources/deployments/', 'virtual-network')]"
	  ],
      "properties": {
        "securityRules": [
          {
            "name": "HTTPS_Inbound",
            "properties": {
              "description": "HTTPS rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
		  },
		{
            "name": "HTTP_Inbound",
            "properties": {
              "description": "HTTP rule",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
		},
		{
            "name": "REST_Inbound",
            "properties": {
              "description": "REST rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 1020,
              "direction": "Inbound"
            }
          },
		  {
            "name": "REST_Outbound",
            "properties": {
              "description": "REST rule",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 2000,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
   {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('eth_name')]",
        "location": "[parameters('location')]",
		"dependsOn" : [
			"[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
			"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP_Name'))]",
			"[concat('Microsoft.Network/networkSecurityGroups/',parameters('networkSecurityGroupName'))]"
		],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
						"privateIPAddress": "[parameters('private_Static_Address_subnet_default')]",
                        "privateIPAllocationMethod": "Static",
						"subnet": {
                            "id": "[reference('Microsoft.Resources/deployments/virtual-network',variables('templateAPIVersion')).outputs.subnet1Ref.value]"
                        },
						"PublicIpAddress": {
							"Id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP_Name'))]"
						}
                    }
                }
            ],
			"networkSecurityGroup": {
				"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
			}
        }
    },
	{
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('eth_name2')]",
        "location": "[parameters('location')]",
		"dependsOn" : [
			"[concat('Microsoft.Resources/deployments/', 'virtual-network')]",
			"[concat('Microsoft.Network/networkSecurityGroups/',parameters('networkSecurityGroupName_admin'))]"
		],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAddress": "[parameters('private_Static_Address_subnet_admin')]",
						"privateIPAllocationMethod": "Static",
						"subnet": {
                            "id": "[reference('Microsoft.Resources/deployments/virtual-network',variables('templateAPIVersion')).outputs.subnet2Ref.value]"
                        }
						
                    }
                }
            ],
			"networkSecurityGroup": {
				"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_admin'))]"
			}
        }
    },
	
	
	{
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vm_name')]",
        "location": "[parameters('location')]",
		"dependsOn" : [
			"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP_Name'))]",
			"[resourceId('Microsoft.Storage/storageAccounts',variables('storage_name'))]",
			"[resourceId('Microsoft.Network/networkInterfaces',variables('eth_name'))]",
			"[resourceId('Microsoft.Network/networkInterfaces',variables('eth_name2'))]"
		],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computername": "[parameters('vm_name')]",
                "adminUsername": "[parameters('vm_admin')]",
                "adminPassword": "[parameters('vm_pwd')]",
				"linuxConfiguration": "[variables('linuxConfiguration')]"
            },
            
            "storageProfile": {
                "imageReference": {
                    "publisher": "[parameters('publisher')]",
                    "offer": "[parameters('offer')]",
                    "sku": "[parameters('sku')]",
                    "version": "latest"
                },
				"osDisk" : {
					"name": "[parameters('vm_name')]",
					"createOption": "FromImage",
					"caching": "ReadWrite",
					"vhd": {
						"uri": "[concat(variables('storage_uri'),'/vhds/',parameters('vm_name'),'.vhd')]"		
					
					}
				}
            },
			"networkProfile" : {
				"networkInterfaces": [
					{
						"id" : "[resourceId('Microsoft.Network/networkInterfaces',variables('eth_name'))]",
						"properties": { "primary": true }
					},
					{
						"id" : "[resourceId('Microsoft.Network/networkInterfaces',variables('eth_name2'))]",
						"properties": { "primary": false }
					}
				]
			}
        }
    },
	{
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vm_name'),'/LinuxCustomScriptExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('vm_name'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "fileUris":  ["https://raw.githubusercontent.com/nmillescamps/AZURE/master/init.sh"],
					"commandToExecute": "[concat('sh init.sh', ' -c ', parameters('company'), ' -f \"', parameters('firstName'), '\" -l \"', parameters('lastName'), '\" -e \"', parameters('email'), '\" -p \"', parameters('businessPhone'), '\" -r \"', parameters('jobRole'), '\" -j \"', parameters('jobFunction'), '\" -o \"', parameters('offer'),'\" -s \"', parameters('sku'), '\"')]"
				}
            }
    }
  ]
}
